0067cb20 ENDBR64
0067cb24 MOV R9,RDI
0067cb27 MOV R10,RDX
0067cb2a TEST R8B,R8B
0067cb2d JZ 0x0067cb78
0067cb2f MOV R11,-0x3333333333333333
0067cb39 NOP dword ptr [RAX]
0067cb40 MOV RAX,RSI
0067cb43 MOV R8,RSI
0067cb46 SUB RDI,0x1
0067cb4a MUL R11
0067cb4d SHR RDX,0x3
0067cb51 LEA RCX,[RDX + RDX*0x4]
0067cb55 ADD RCX,RCX
0067cb58 SUB R8,RCX
0067cb5b MOVZX ECX,byte ptr [R10 + R8*0x1 + 0x4]
0067cb61 MOV byte ptr [RDI],CL
0067cb63 MOV RCX,RSI
0067cb66 MOV RSI,RDX
0067cb69 CMP RCX,0x9
0067cb6d JA 0x0067cb40
0067cb6f MOV EAX,R9D
0067cb72 SUB EAX,EDI
0067cb74 RET
0067cb78 MOV EAX,ECX
0067cb7a AND EAX,0x4a
0067cb7d CMP EAX,0x40
0067cb80 JZ 0x0067cbc0
0067cb82 AND ECX,0x4000
0067cb88 CMP ECX,0x1
0067cb8b SBB RAX,RAX
0067cb8e AND RAX,-0x10
0067cb92 LEA RDX,[RDX + RAX*0x1 + 0x14]
0067cb97 NOP word ptr [RAX + RAX*0x1]
0067cba0 MOV RAX,RSI
0067cba3 SUB RDI,0x1
0067cba7 AND EAX,0xf
0067cbaa SHR RSI,0x4
0067cbae MOVZX EAX,byte ptr [RDX + RAX*0x1]
0067cbb2 MOV byte ptr [RDI],AL
0067cbb4 JNZ 0x0067cba0
0067cbb6 JMP 0x0067cb6f
0067cbc0 MOV RAX,RSI
0067cbc3 SUB RDI,0x1
0067cbc7 AND EAX,0x7
0067cbca SHR RSI,0x3
0067cbce MOVZX EAX,byte ptr [R10 + RAX*0x1 + 0x4]
0067cbd4 MOV byte ptr [RDI],AL
0067cbd6 JNZ 0x0067cbc0
0067cbd8 JMP 0x0067cb6f
