0067ca60 ENDBR64
0067ca64 MOV R9,RDI
0067ca67 MOV R10,RDX
0067ca6a TEST R8B,R8B
0067ca6d JZ 0x0067cab8
0067ca6f MOV R11,-0x3333333333333333
0067ca79 NOP dword ptr [RAX]
0067ca80 MOV RAX,RSI
0067ca83 MOV R8,RSI
0067ca86 SUB RDI,0x1
0067ca8a MUL R11
0067ca8d SHR RDX,0x3
0067ca91 LEA RCX,[RDX + RDX*0x4]
0067ca95 ADD RCX,RCX
0067ca98 SUB R8,RCX
0067ca9b MOVZX ECX,byte ptr [R10 + R8*0x1 + 0x4]
0067caa1 MOV byte ptr [RDI],CL
0067caa3 MOV RCX,RSI
0067caa6 MOV RSI,RDX
0067caa9 CMP RCX,0x9
0067caad JA 0x0067ca80
0067caaf MOV EAX,R9D
0067cab2 SUB EAX,EDI
0067cab4 RET
0067cab8 MOV EAX,ECX
0067caba AND EAX,0x4a
0067cabd CMP EAX,0x40
0067cac0 JZ 0x0067cb00
0067cac2 AND ECX,0x4000
0067cac8 CMP ECX,0x1
0067cacb SBB RAX,RAX
0067cace AND RAX,-0x10
0067cad2 LEA RDX,[RDX + RAX*0x1 + 0x14]
0067cad7 NOP word ptr [RAX + RAX*0x1]
0067cae0 MOV RAX,RSI
0067cae3 SUB RDI,0x1
0067cae7 AND EAX,0xf
0067caea SHR RSI,0x4
0067caee MOVZX EAX,byte ptr [RDX + RAX*0x1]
0067caf2 MOV byte ptr [RDI],AL
0067caf4 JNZ 0x0067cae0
0067caf6 JMP 0x0067caaf
0067cb00 MOV RAX,RSI
0067cb03 SUB RDI,0x1
0067cb07 AND EAX,0x7
0067cb0a SHR RSI,0x3
0067cb0e MOVZX EAX,byte ptr [R10 + RAX*0x1 + 0x4]
0067cb14 MOV byte ptr [RDI],AL
0067cb16 JNZ 0x0067cb00
0067cb18 JMP 0x0067caaf
