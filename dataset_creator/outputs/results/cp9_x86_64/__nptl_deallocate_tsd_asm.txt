006ffc90 ENDBR64
006ffc94 XOR EAX,EAX
006ffc96 MOV AL,byte ptr FS:[0x610]
006ffc9e TEST AL,AL
006ffca0 JZ 0x006ffdd2
006ffca6 PUSH R15
006ffca8 PUSH R14
006ffcaa MOV R14D,0x4
006ffcb0 PUSH R13
006ffcb2 PUSH R12
006ffcb4 PUSH RBP
006ffcb5 PUSH RBX
006ffcb6 SUB RSP,0x8
006ffcba MOV byte ptr FS:[0x610],0x0
006ffcc3 LEA R13,[0x939988]
006ffcca XOR R12D,R12D
006ffccd JMP 0x006ffce1
006ffcd0 ADD R12,0x1
006ffcd4 ADD R13,0x200
006ffcdb CMP R12,0x20
006ffcdf JZ 0x006ffd33
006ffce1 MOV RAX,qword ptr FS:[0x510 + R12*0x8]
006ffcea TEST RAX,RAX
006ffced JZ 0x006ffcd0
006ffcef LEA RBX,[RAX + 0x8]
006ffcf3 LEA R15,[RAX + 0x208]
006ffcfa MOV RBP,R13
006ffcfd JMP 0x006ffd0d
006ffd00 ADD RBX,0x10
006ffd04 ADD RBP,0x10
006ffd08 CMP RBX,R15
006ffd0b JZ 0x006ffcd0
006ffd0d MOV RDI,qword ptr [RBX]
006ffd10 TEST RDI,RDI
006ffd13 JZ 0x006ffd00
006ffd15 MOV qword ptr [RBX],0x0
006ffd1c MOV RAX,qword ptr [RBP + -0x8]
006ffd20 CMP qword ptr [RBX + -0x8],RAX
006ffd24 JNZ 0x006ffd00
006ffd26 MOV RDX,qword ptr [RBP]
006ffd2a TEST RDX,RDX
006ffd2d JZ 0x006ffd00
006ffd2f CALL RDX
006ffd31 JMP 0x006ffd00
006ffd33 XOR EAX,EAX
006ffd35 MOV AL,byte ptr FS:[0x610]
006ffd3d TEST AL,AL
006ffd3f JZ 0x006ffd86
006ffd41 SUB R14,0x1
006ffd45 JNZ 0x006ffcba
006ffd4b MOV RAX,qword ptr FS:[0x10]
006ffd54 LEA RDI,[RAX + 0x318]
006ffd5b MOV qword ptr [RAX + 0x310],0x0
006ffd66 MOV qword ptr [RAX + 0x508],0x0
006ffd71 AND RDI,-0x8
006ffd75 SUB EAX,EDI
006ffd77 LEA ECX,[RAX + 0x510]
006ffd7d MOV RAX,R14
006ffd80 SHR ECX,0x3
006ffd83 STOSQ.REP RDI
006ffd86 MOV EBX,0x1
006ffd8b NOP dword ptr [RAX + RAX*0x1]
006ffd90 MOV RDI,qword ptr FS:[0x510 + RBX*0x8]
006ffd99 TEST RDI,RDI
006ffd9c JZ 0x006ffdb0
006ffd9e CALL 0x00706ae0
006ffda3 MOV qword ptr FS:[0x510 + RBX*0x8],0x0
006ffdb0 ADD RBX,0x1
006ffdb4 CMP RBX,0x20
006ffdb8 JNZ 0x006ffd90
006ffdba MOV byte ptr FS:[0x610],0x0
006ffdc3 ADD RSP,0x8
006ffdc7 POP RBX
006ffdc8 POP RBP
006ffdc9 POP R12
006ffdcb POP R13
006ffdcd POP R14
006ffdcf POP R15
006ffdd1 RET
006ffdd2 RET
