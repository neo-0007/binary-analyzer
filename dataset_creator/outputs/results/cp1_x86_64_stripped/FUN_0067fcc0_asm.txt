0067fcc0 ENDBR64
0067fcc4 MOV R9,RDI
0067fcc7 MOV R10,RDX
0067fcca TEST R8B,R8B
0067fccd JZ 0x0067fd18
0067fccf MOV R11,-0x3333333333333333
0067fcd9 NOP dword ptr [RAX]
0067fce0 MOV RAX,RSI
0067fce3 MOV R8,RSI
0067fce6 SUB RDI,0x1
0067fcea MUL R11
0067fced SHR RDX,0x3
0067fcf1 LEA RCX,[RDX + RDX*0x4]
0067fcf5 ADD RCX,RCX
0067fcf8 SUB R8,RCX
0067fcfb MOVZX ECX,byte ptr [R10 + R8*0x1 + 0x4]
0067fd01 MOV byte ptr [RDI],CL
0067fd03 MOV RCX,RSI
0067fd06 MOV RSI,RDX
0067fd09 CMP RCX,0x9
0067fd0d JA 0x0067fce0
0067fd0f MOV EAX,R9D
0067fd12 SUB EAX,EDI
0067fd14 RET
0067fd18 MOV EAX,ECX
0067fd1a AND EAX,0x4a
0067fd1d CMP EAX,0x40
0067fd20 JZ 0x0067fd60
0067fd22 AND ECX,0x4000
0067fd28 CMP ECX,0x1
0067fd2b SBB RAX,RAX
0067fd2e AND RAX,-0x10
0067fd32 LEA RDX,[RDX + RAX*0x1 + 0x14]
0067fd37 NOP word ptr [RAX + RAX*0x1]
0067fd40 MOV RAX,RSI
0067fd43 SUB RDI,0x1
0067fd47 AND EAX,0xf
0067fd4a SHR RSI,0x4
0067fd4e MOVZX EAX,byte ptr [RDX + RAX*0x1]
0067fd52 MOV byte ptr [RDI],AL
0067fd54 JNZ 0x0067fd40
0067fd56 JMP 0x0067fd0f
0067fd60 MOV RAX,RSI
0067fd63 SUB RDI,0x1
0067fd67 AND EAX,0x7
0067fd6a SHR RSI,0x3
0067fd6e MOVZX EAX,byte ptr [R10 + RAX*0x1 + 0x4]
0067fd74 MOV byte ptr [RDI],AL
0067fd76 JNZ 0x0067fd60
0067fd78 JMP 0x0067fd0f
